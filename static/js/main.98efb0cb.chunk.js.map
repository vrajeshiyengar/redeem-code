{"version":3,"sources":["assets/coupon.svg","assets/recycle.svg","App.js","reportWebVitals.js","index.js"],"names":["Coupon","code","className","codeMap","Coupons","codes","length","filter","x","hasOwnProperty","map","App","useState","window","localStorage","getItem","JSON","parse","err","includes","split","fetchFromLocalStorage","unlockedCodes","setUnlockedCodes","enteredCode","setEnteredCode","useEffect","setItem","stringify","handleSubmit","alert","Set","onClick","confirm","src","resetSVG","alt","couponSVG","value","onChange","e","newCode","target","replace","toUpperCase","onKeyPress","key","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,G,MAAA,IAA0B,oCCA1B,MAA0B,oC,cCQnCA,EAAS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBD,IACvB,qBAAKC,UAAU,OAAf,SAAuBC,EAAQF,SAK/BG,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OAAqB,IAAjBA,EAAMC,OACD,6BAEF,qBAAKJ,UAAU,UAAf,SACLG,EAAME,QAAO,SAAAC,GAAC,OAAIL,EAAQM,eAAeD,MAAIE,KAAI,SAAAF,GAAC,OAAI,cAAC,EAAD,CAAQP,KAAMO,UAyFzDG,EArFH,WAEV,IAFgB,EAiB0BC,mBAfZ,WAC5B,IACE,OAAIC,OAAOC,aAAaC,QAAQ,kBAAoBC,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,kBAClFC,KAAKC,MAAMJ,OAAOC,aAAaC,QAAQ,kBAEzC,GACP,MAAOG,GACP,MAA4D,kBAAjDL,OAAOC,aAAaC,QAAQ,kBAAiCF,OAAOC,aAAaC,QAAQ,iBAAiBI,SAAS,KACrHN,OAAOC,aAAaC,QAAQ,iBAAiBK,MAAM,KAErD,IAKwCC,IAjBnC,mBAiBTC,EAjBS,KAiBMC,EAjBN,OAkBsBX,mBAAS,IAlB/B,mBAkBTY,EAlBS,KAkBIC,EAlBJ,KAoBhBC,qBAAU,WACRD,EAAe,IACfZ,OAAOC,aAAaa,QAAQ,gBAAgBX,KAAKY,UAAUN,MAC1D,CAACA,IAEJ,IAMMO,EAAe,WACdL,EAGErB,EAAQM,eAAee,GAGnBF,EAAcH,SAASK,GAC9BM,MAAM,wCAGNP,EAAiB,YAAI,IAAIQ,IAAJ,CAASP,GAAT,mBAAwBF,OAN7CQ,MAAM,wDAHRA,MAAM,wBAcV,OACE,qBAAK5B,UAAU,MAAf,SACE,wBAAQA,UAAU,WAAlB,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAMA,UAAU,cAAhB,sBACA,uBAAMA,UAAU,eAAe8B,QAAS,WAChCnB,OAAOoB,QAAQ,uDACjBV,EAAiB,KAFvB,UAKE,qBAAKW,IAAKC,EAAUC,IAAI,QAAQlC,UAAU,UAC1C,sBAAMA,UAAU,UAAhB,8BAEF,sBAAMA,UAAU,cAAhB,wDACA,qBAAKgC,IAAKG,EAAWD,IAAI,SAASlC,UAAU,WAC5C,sBAAKA,UAAU,kBAAf,UACE,uBACEoC,MAAOd,EACPtB,UAAU,aACVqC,SAAU,SAAAC,GAvCG,IAAAC,IAuCqBD,EAAEE,OAAOJ,MAtCrDb,EAA6BgB,EAHEE,QAAQ,SAAU,IAAIC,gBA0C3CC,WAAY,SAAAL,GACI,UAAVA,EAAEM,KACJjB,OAIN,wBAAQkB,KAAK,SAAS7C,UAAU,cAAc8B,QAAS,WAAQH,KAA/D,uBAIF,cAAC,EAAD,CAASxB,MAAOiB,YC3FX0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.98efb0cb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coupon.6ac0d466.svg\";","export default __webpack_public_path__ + \"static/media/recycle.fad077d7.svg\";","import './App.scss';\nimport couponSVG from './assets/coupon.svg';\nimport resetSVG from './assets/recycle.svg';\nimport { useState, useEffect } from \"react\";\nimport codeMap from \"./assets/codes.json\"\n\n\n\nconst Coupon = ({ code }) => {\n  return (\n    <div className=\"coupon-container\">\n      <div className=\"code\">{code}</div>\n      <div className=\"gift\">{codeMap[code]}</div>\n    </div>\n  )\n}\n\nconst Coupons = ({ codes }) => {\n  if (codes.length === 0) {\n    return <></>\n  }\n  return <div className=\"coupons\">{\n    codes.filter(x => codeMap.hasOwnProperty(x)).map(x => <Coupon code={x} />)\n  }</div>\n}\n\nconst App = () => {\n\n  const fetchFromLocalStorage = () => {\n    try {\n      if (window.localStorage.getItem(\"unlockedCodes\") && JSON.parse(window.localStorage.getItem(\"unlockedCodes\"))) {\n        return JSON.parse(window.localStorage.getItem(\"unlockedCodes\"));\n      }\n      return [];\n    } catch (err) {\n      if (typeof window.localStorage.getItem(\"unlockedCodes\") === \"string\" && window.localStorage.getItem(\"unlockedCodes\").includes(\",\")) {\n        return window.localStorage.getItem(\"unlockedCodes\").split(\",\");\n      }\n      return [];\n    }\n  }\n\n\n  const [unlockedCodes, setUnlockedCodes] = useState(fetchFromLocalStorage());\n  const [enteredCode, setEnteredCode] = useState(\"\");\n\n  useEffect(() => {\n    setEnteredCode(\"\");\n    window.localStorage.setItem(\"unlockedCodes\",JSON.stringify(unlockedCodes))\n  }, [unlockedCodes])\n\n  const transformCode = str => str.replace(/[\\W_]/g, \"\").toUpperCase();\n\n  const handleCodeChange = newCode => {\n    setEnteredCode(transformCode(newCode));\n  }\n\n  const handleSubmit = () => {\n    if (!enteredCode) {\n      alert(\"please enter a code\")\n    } else {\n      if (!codeMap.hasOwnProperty(enteredCode)) {\n        alert(\"The code you entered is invalid :( please try again!\")\n      }\n      else if (unlockedCodes.includes(enteredCode)) {\n        alert(\"This code has already been redeemed!\")\n      }\n      else {\n        setUnlockedCodes([...new Set([enteredCode,...unlockedCodes])])\n      }\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-body\">\n        <div className=\"redeem-title\">\n          <span className=\"redeem-text\">Hello :D</span>\n          <span className=\"reset-button\" onClick={()=>{\n              if (window.confirm(\"are you sure you want to reset all unlocked codes?\")) {\n                setUnlockedCodes([]);\n              }\n            }}>\n            <img src={resetSVG} alt=\"reset\" className=\"reset\"/>\n            <span className=\"hide-sm\">Reset coupons</span>\n          </span>\n          <span className=\"redeem-text\">Enter your code to reveal the gift number!</span>\n          <img src={couponSVG} alt=\"coupon\" className=\"coupon\" />\n          <div className=\"responsive-flex\">\n            <input\n              value={enteredCode}\n              className=\"enter-code\"\n              onChange={e => { handleCodeChange(e.target.value) }}\n              onKeyPress={e => {\n                if (e.key === \"Enter\") {\n                  handleSubmit();\n                }\n              }}\n            />\n            <button type=\"submit\" className=\"submit-code\" onClick={() => { handleSubmit(); }}>\n              Submit\n            </button>\n          </div>\n          <Coupons codes={unlockedCodes} />\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}